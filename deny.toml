# cargo-deny configuration

[licenses]
# List of explicitly allowed licenses
allow = [
    "MIT",
    "Apache-2.0",
    "Apache-2.0 WITH LLVM-exception",
    "BSD-2-Clause",
    "BSD-3-Clause",
    "ISC",
    "Unicode-DFS-2016",
    "CC0-1.0",
]

# List of explicitly disallowed licenses
deny = [
    "GPL-2.0",
    "GPL-3.0",
    "AGPL-3.0",
    "LGPL-2.0",
    "LGPL-2.1",
    "LGPL-3.0",
]

# Confidence threshold for license detection
confidence-threshold = 0.8

# Allow private packages (workspace members)
private = { ignore = true }

[bans]
# Deny multiple versions of the same crate
multiple-versions = "warn"
# Deny crates with security vulnerabilities
vulnerability = "deny"
# Allow wildcard dependencies in private packages
wildcards = "allow"
highlight = "all"

# Specific crates to deny
deny = [
    # Add any crates you want to explicitly ban
]

# Skip certain crates when checking for duplicates
skip = [
    # Add crates that are allowed to have multiple versions
]

[advisories]
# The path where the advisory database is cloned/fetched into
db-path = "~/.cargo/advisory-db"
# The url(s) of the advisory databases to use
db-urls = ["https://github.com/rustsec/advisory-db"]
# How to handle crates with security vulnerabilities
vulnerability = "deny"
# How to handle unmaintained crates
unmaintained = "warn"
# How to handle crates with security notices
notice = "warn"
# Threshold for security vulnerabilities (in days)
ignore = [
    # Add advisory IDs to ignore if needed
]

[sources]
# Lint level for what to happen when a crate from a crate registry that is not in the allow list is encountered
unknown-registry = "warn"
# Lint level for what to happen when a crate from a git repository that is not in the allow list is encountered
unknown-git = "warn"
# List of allowed crate registries
allow-registry = ["https://github.com/rust-lang/crates.io-index"]
# List of allowed Git repositories
allow-git = []